{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputData","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","editItem","setEditItem","toggleButton","setToggleButton","useEffect","setItem","stringify","addItem","map","curEle","id","name","myNewInputData","Date","getTime","toString","alert","className","src","text","placeholder","value","onChange","event","target","onClick","index","itemsTodoEdited","find","editMyItems","udpateItems","filter","deleteItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAoHeA,MAvGf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAXP,WACnB,IAAMG,EAAQC,aAAaC,QAAQ,cACnC,OAAGF,EACMG,KAAKC,MAAMJ,GAEX,GAM0BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGAC,qBAAU,WACRX,aAAaY,QAAQ,aAAcV,KAAKW,UAAUR,MACjD,CAACA,IAGJ,IAAMS,EAAU,WACd,GAAKjB,EAEC,GAAGA,GAAaY,EACpBH,EACED,EAAMU,KAAI,SAACC,GACT,OAAGA,EAAOC,KAAOV,EACR,2BAAIS,GAAX,IAAmBE,KAAMrB,IAEpBmB,MAGXlB,EAAa,IACbU,EAAY,MACZE,GAAgB,OACZ,CACJ,IAAMS,EAAgB,CACpBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMrB,GAERS,EAAS,GAAD,mBAAKD,GAAL,CAAYc,KACpBrB,EAAa,SAnBbyB,MAAM,0BA6CV,OACE,mCACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,qBAAKC,IAAI,aACT,qCAAY,4FAEd,sBAAKD,UAAU,WAAf,UACE,uBAAOE,KAAK,OACVC,YAAY,8BACZH,UAAU,eACVI,MAAO/B,EACPgC,SAAU,SAACC,GAAD,OAAWhC,EAAagC,EAAMC,OAAOH,UAEhDnB,EAAe,mBAAGe,UAAU,qBAAqBQ,QAASlB,IAAgB,mBAAGU,UAAU,qBAAqBQ,QAASlB,OAGxH,qBAAKU,UAAU,YAAf,SACGnB,EAAMU,KAAI,SAACC,GACV,OACF,sBAAKQ,UAAU,WAAf,UACE,wCAAMR,EAAOE,QACb,sBAAKM,UAAU,WAAf,UACE,mBAAGA,UAAU,sBAAsBQ,QAAS,kBA7CtC,SAACC,GACnB,IAAMC,EAAkB7B,EAAM8B,MAAK,SAACnB,GAClC,OAAOA,EAAOC,KAAOgB,KAEvBnC,EAAaoC,EAAgBhB,MAC7BV,EAAYyB,GACZvB,GAAgB,GAuC4C0B,CAAYpB,EAAOC,OACnE,mBAAGO,UAAU,2BAA2BQ,QAAS,kBAhC5C,SAACC,GAClB,IAAMI,EAAchC,EAAMiC,QAAO,SAACtB,GAChC,OAAOA,EAAOC,KAAOgB,KAEvB3B,EAAS+B,GA4BwDE,CAAWvB,EAAOC,YAJ5CD,EAAOC,SAWxC,qBAAKO,UAAU,YAAf,SACE,wBAAQA,UAAU,eAClB,oBAAkB,mBAClBQ,QA9CQ,WAChB1B,EAAS,KA2CD,SAGE,iEChGCkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.972623fb.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './App.css';\r\n\r\n// fetching the data from the local storage\r\nconst getLocalData = ()=>{\r\n  const lists = localStorage.getItem(\"myTodoList\");\r\n  if(lists){\r\n    return JSON.parse(lists);\r\n  }else{\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [items, setItems] = useState(getLocalData());\r\n  const [editItem, setEditItem] = useState(\"\");\r\n  const [toggleButton, setToggleButton] = useState(false);\r\n  \r\n  // adding localStorage\r\n  useEffect(()=>{\r\n    localStorage.setItem(\"myTodoList\", JSON.stringify(items));\r\n  }, [items])\r\n\r\n  // adding the items\r\n  const addItem = () => {\r\n    if (!inputData) {\r\n      alert(\"Please enter the data\");\r\n    }else if(inputData && toggleButton){\r\n      setItems(\r\n        items.map((curEle)=>{\r\n          if(curEle.id === editItem){\r\n            return {...curEle, name: inputData};\r\n          }\r\n          return curEle;\r\n        })\r\n      );\r\n      setInputData([]);\r\n      setEditItem(null);\r\n      setToggleButton(false);\r\n    }else {\r\n      const myNewInputData ={\r\n        id: new Date().getTime().toString(),\r\n        name: inputData\r\n      }\r\n      setItems([...items, myNewInputData]);\r\n      setInputData(\"\");\r\n    }\r\n  }\r\n\r\n  //updating/editing the items\r\n  const editMyItems = (index)=>{\r\n    const itemsTodoEdited = items.find((curEle)=>{\r\n      return curEle.id === index;\r\n    });\r\n    setInputData(itemsTodoEdited.name);\r\n    setEditItem(index);\r\n    setToggleButton(true);\r\n  }\r\n\r\n  // remove all the elements\r\n  const removeAll = ()=>{\r\n    setItems([]);\r\n  }\r\n  // deleting the items\r\n  const deleteItem = (index) =>{\r\n    const udpateItems = items.filter((curEle)=>{\r\n      return curEle.id !== index;\r\n    });\r\n    setItems(udpateItems);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <figure>\r\n            <img src=\"todo.svg\"/>\r\n            <figcaption><strong>Add Your To-Do List Here üëáüèª</strong></figcaption>\r\n          </figure>\r\n          <div className=\"addItems\">\r\n            <input text=\"text\"\r\n              placeholder=\"‚úçüèª Add Item\"\r\n              className=\"form-control\"\r\n              value={inputData}\r\n              onChange={(event) => setInputData(event.target.value)}\r\n            />\r\n            {toggleButton ? <i className=\"fa fa-edit add-btn\" onClick={addItem}></i> : <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>}\r\n          </div>\r\n          {/* showing the listed items */}\r\n          <div className=\"showItems\">\r\n            {items.map((curEle)=>{\r\n              return(\r\n            <div className=\"eachItem\" key={curEle.id}>\r\n              <h3>‚≠ê{curEle.name}</h3>\r\n              <div className=\"todo-btn\">\r\n                <i className=\"far fa-edit add-btn\" onClick={()=>editMyItems(curEle.id)}></i>\r\n                <i className=\"far fa-trash-alt add-btn\" onClick={()=>deleteItem(curEle.id)}></i>\r\n              </div>\r\n            </div>\r\n            );\r\n            })}\r\n          </div>\r\n          {/* rmeove all button  */}\r\n          <div className=\"showItems\">\r\n            <button className=\"btn effect04\" \r\n            data-sm-link-text=\"Remove All‚ùå\"\r\n            onClick={removeAll}>\r\n              <span> CHECK LIST‚úÖ</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}